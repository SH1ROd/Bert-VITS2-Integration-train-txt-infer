0.
    使用UVR5等软件将音频处理成wav格式并去除背景音，时长在30分钟左右

1.
    使用slicer-gui.exe（主目录下）切片，参数依次为：
    -40
    1000
    500
    10
    10000

2.
    a.
        在resample_only.py 中先修改role成你要训练的角色的名字
        将刚刚slicer切好的语音.wav文件放在目录"./raw/角色名/"的位置下
        ps：角色名和刚刚修改的那个要一样
        然后运行resample_only.py
    b.
        或者直接在主目录打开cmd，终端依次执行：
        cd venv/Scripts
        activate
        cd ../..
        python resample_only.py --role 角色名

3.
    处理完成后，切割和重采样的音频会保存在"./custom_character_voice/{role}/"下，格式是：{role}_{i}_{file_idx}.wav，去挑选出不要的音频

4.
    a.
        在short_audio_transcribe.py中先修改role成你要训练的角色的名字
        然后运行short_audio_transcribe.py 进行语音识别文字
    b.
        或者继续在上一步完成的终端执行：python short_audio_transcribe.py --role 角色名

5.
    处理完成后，去"./filelists/short_character_anno.list"进行微调

6.
    a.
        然后运行preprocess_text.py
    b.
        或者继续在上一步完成的终端执行：python preprocess_text.py

7.
    a.
        然后运行bert_gen.py
    b.
        或者继续在上一步完成的终端执行：python bert_gen.py

8.
    a.
        然后开始训练，运行train_ms.py
    b.
        或者继续在上一步完成的终端执行：python train_ms.py

9.
    若训练中断要继续训练则执行：python train_ms.py --cont

10.
    启动tensorboard，观察训练的loss：python -m tensorboard.main --logdir=logs\角色名

纯终端训练指令汇总(已激活环境后)：
python resample_only.py --role 角色名
python short_audio_transcribe.py --role 角色名
python preprocess_text.py
python bert_gen.py
python train_ms.py --role 角色名
python train_ms.py --role 角色名 --cont
python -m tensorboard.main --logdir=logs\角色名

例子：
python resample_only.py --role kesulu
python short_audio_transcribe.py --role kesulu
python preprocess_text.py
python bert_gen.py
python train_ms.py --role kesulu
python train_ms.py --role kesulu --cont
python -m tensorboard.main --logdir=logs\kesulu --host='0.0.0.0' --port=1130

推理：
将模型最新的模型文件(.pth)放到目录"./model_saved/角色名/"目录下，运行